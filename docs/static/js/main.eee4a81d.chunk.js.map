{"version":3,"sources":["components/TodoAdd.js","hooks/useForm.js","components/TodoListItem.js","components/TodoList.js","components/todoReducer.js","components/TodoApp.js","index.js"],"names":["TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","className","onSubmit","e","preventDefault","trim","length","newTodo","id","Date","getTime","desc","done","type","placeholder","autoComplete","onChange","TodoListItem","todo","index","handleDelete","handleToggle","onClick","TodoList","todos","map","i","todoReducer","state","action","payload","filter","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","valueId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eee4a81d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const TodoAdd = ({ handleAddTodo }) => {\r\n  const [{ description }, handleInputChange, reset] = useForm({\r\n    description: '',\r\n  });\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (description.trim().length <= 1) {\r\n      return;\r\n    }\r\n    const newTodo = {\r\n      id: new Date().getTime(),\r\n      desc: description,\r\n      done: false,\r\n    };\r\n\r\n    handleAddTodo(newTodo);\r\n    reset();\r\n  };\r\n  return (\r\n    <form className=\"border-2 border-gray-500 p-5\" onSubmit={handleSubmit}>\r\n      <h1 className=\"pb-2 border-b-2 border-gray-300 text-4xl mb-3\">\r\n        Add TODO\r\n      </h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add New TODO\"\r\n        name=\"description\"\r\n        autoComplete=\"off\"\r\n        className=\"mt-5 w-full h-10 border-2 border-gray-700 rounded text-center \"\r\n        onChange={handleInputChange}\r\n        value={description}\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        className=\"w-full mt-5 px-6 py-3 rounded font-medium bg-blue-500 text-white hover:bg-white hover:text-blue-500 border-2 border-blue-500 transition duration-250\t\"\r\n      >\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import React from 'react';\r\n\r\nexport const TodoListItem = ({ todo, index, handleDelete, handleToggle }) => {\r\n  return (\r\n    <li\r\n      className=\"py-1 my-2 flex justify-between border-t-2 border-b-2 border-b-gray-300 \"\r\n      key={todo.id}\r\n    >\r\n      <p\r\n        onClick={() => handleToggle(todo.id)}\r\n        className={`${\r\n          todo.done && 'complete bg-green-500 rounded p-1'\r\n        } my-auto `}\r\n      >\r\n        {index + 1}: {todo.desc}\r\n      </p>\r\n      <button\r\n        onClick={() => handleDelete(todo.id)}\r\n        className=\"px-5 py-4 rounded font-medium bg-red-500 text-white hover:bg-red-900 transition duration-250\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { TodoListItem } from './TodoListItem';\r\n\r\nexport const TodoList = ({ todos, handleDelete, handleToggle }) => {\r\n  return (\r\n    <ul>\r\n      {todos.map((todo, i) => (\r\n        <TodoListItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          index={i}\r\n          handleDelete={handleDelete}\r\n          handleToggle={handleToggle}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","export const todoReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'add':\r\n      return [...state, action.payload];\r\n\r\n    case 'delete':\r\n      return state.filter(todo => todo.id !== action.payload);\r\n\r\n    case 'toggle':\r\n      return state.map(todo =>\r\n        todo.id === action.payload ? { ...todo, done: !todo.done } : todo\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport { TodoAdd } from './TodoAdd';\r\nimport { TodoList } from './TodoList';\r\nimport { todoReducer } from './todoReducer';\r\nconst init = () => {\r\n  return JSON.parse(localStorage.getItem('todos'));\r\n};\r\nexport const TodoApp = () => {\r\n  const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const handleDelete = valueId => {\r\n    const action = {\r\n      type: 'delete',\r\n      payload: valueId,\r\n    };\r\n\r\n    dispatch(action);\r\n  };\r\n\r\n  const handleToggle = valueId => {\r\n    const action = {\r\n      type: 'toggle',\r\n      payload: valueId,\r\n    };\r\n\r\n    dispatch(action);\r\n  };\r\n\r\n  const handleAddTodo = newTodo => {\r\n    dispatch({\r\n      type: 'add',\r\n      payload: newTodo,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"border-2 border-gray-400 p-4 height \">\r\n      <h1 className=\"text-5xl pb-4 border-b-2 border-gray-300\">\r\n        TODO Aplication\r\n      </h1>\r\n      <h2 className=\"text-3xl mt-2\">Number of TODOs {todos.length}</h2>\r\n      <div className=\"flex justify-between\">\r\n        <div className=\"w-1/2\">\r\n          <TodoList\r\n            todos={todos}\r\n            handleDelete={handleDelete}\r\n            handleToggle={handleToggle}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"w-1/2 ml-5\">\r\n          <TodoAdd handleAddTodo={handleAddTodo} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './components/TodoApp';\nimport './index.css';\n\nReactDOM.render(\n  <TodoApp />,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}